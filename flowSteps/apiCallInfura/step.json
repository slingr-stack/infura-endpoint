{
  "label": "API call to infura",
  "name": "apiCallInfura",
  "category": "integrations",
  "description": "This flow step will send generic request to infura",
  "inputs": [
    {
      "label": "Url",
      "name": "url",
      "description": "The method and path to which this endpoint is to send requests in a generic way.",
      "type": "urlParams",
      "required": "true",
      "options": {
        "type": "dropDown",
        "possibleValues": [
            {
              "label": "POST /eth_accounts/{id}"
            },
            {
              "label": "POST /eth_blockNumber/{id}/{params}"
            },
            {
              "label": "POST /eth_call/{id}/{params}"
            },
            {
              "label": "POST /eth_chainId/{id}/{params}"
            },
            {
              "label": "POST /eth_createAccessList/{id}/{params}"
            },
            {
              "label": "POST /eth_estimateGas/{id}/{params}"
            },
            {
              "label": "POST /eth_feeHistory/{id}/{params}"
            },
            {
              "label": "POST /eth_getBalance/{id}/{params}"
            },
            {
              "label": "POST /eth_gasPrice/{id}/{params}"
            },
            {
              "label": "POST /eth_getBlockByHash/{id}/{params}"
            },
            {
              "label": "POST /eth_getBlockByNumber/{id}/{params}"
            },
            {
              "label": "POST /eth_getBlockTransactionCountByHash/{id}/{params}"
            },
            {
              "label": "POST /eth_getBlockTransactionCountByNumber/{id}/{params}"
            },
            {
              "label": "POST /eth_getCode/{id}/{params}"
            },
            {
              "label": "POST /eth_getLogs/{id}/{params}"
            },
            {
              "label": "POST /eth_getStorageAt/{id}/{params}"
            },
            {
              "label": "POST /eth_getTransactionByBlockHashAndIndex/{id}/{params}"
            },
            {
              "label": "POST /eth_getTransactionByBlockNumberAndIndex/{id}/{params}"
            },
            {
              "label": "POST /eth_getTransactionByHash/{id}/{params}"
            },
            {
              "label": "POST /eth_getTransactionCount/{id}/{params}"
            },
            {
              "label": "POST /eth_getTransactionReceipt/{id}/{params}"
            },
            {
              "label": "POST /eth_getUncleByBlockHashAndIndex/{id}/{params}"
            },
            {
              "label": "POST /eth_getUncleByBlockNumberAndIndex/{id}/{params}"
            },
            {
              "label": "POST /eth_getUncleCountByBlockHash/{id}/{params}"
            },
            {
              "label": "POST /eth_getUncleCountByBlockNumber/{id}/{params}"
            },
            {
              "label": "POST /eth_getWork/{id}/{params}"
            },
            {
              "label": "POST /eth_mining/{id}/{params}"
            },
            {
              "label": "POST /eth_hashrate/{id}/{params}"
            },
            {
              "label": "POST /eth_protocolVersion/{id}/{params}"
            },
            {
              "label": "POST /eth_sendRawTransaction/{project-id}/{id}/{params}"
            },
            {
              "label": "POST /eth_submitWork/{project-id}/{id}/{params}"
            },
            {
              "label": "POST /eth_syncing/{id}/{params}"
            },
            {
              "label": "POST /eth_getFilterChanges/{id}/{params}"
            },
            {
              "label": "POST /eth_getFilterLogs/{id}/{params}"
            },
            {
              "label": "POST /eth_newFilter/{id}/{params}"
            },
            {
              "label": "POST /eth_newBlockFilter/{id}/{params}"
            },
            {
              "label": "POST /eth_uninstallFilter/{id}/{params}"
            },
            {
              "label": "POST /net_listening/{id}/{params}"
            },
            {
              "label": "POST /net_listening/net_peerCount/{id}/{params}"
            },
            {
              "label": "POST /net_version/{id}/{params}"
            },
            {
              "label": "POST /web3_clientVersion/{id}/{params}"
            }
        ]
      }
    },
    {
      "label": "Headers",
      "name": "headers",
      "description": "Let the client and the server pass additional information with the HTTP request in a key value format. (e.g. key=ABC123)",
      "type": "keyValue"
    },
    {
      "label": "Query Params",
      "name": "params",
      "description": "Parameters attached to the end of a url in a key value format. (e.g. key=ABC123)",
      "type": "keyValue"
    },
    {
      "label": "Body",
      "name": "body",
      "type": "json",
      "description": "Content to be sent to the server.",
      "options": {
        "allowContextSelector": "true"
      }
    },
    {
      "label": "Override Settings",
      "name": "overrideSettings",
      "type": "boolean",
      "description": "If true, allows adding configurations",
      "defaultValue": false,
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Follow Redirects",
      "name": "followRedirects",
      "type": "boolean",
      "description": "Follow the redirects when a HTTP request is executed",
      "visibility": "config.overrideSettings",
      "defaultValue": false,
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Download",
      "name": "download",
      "type": "boolean",
      "description": "Indicates that the resource has to be downloaded into a file instead of returning it in the response.",
      "visibility": "config.overrideSettings && config.events != \"fileDownloaded\"",
      "defaultValue": false,
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "File Name",
      "name": "fileName",
      "description": "If provided, the file will be stored with this name. If empty the file name will be calculated from the URL.",
      "visibility": "(config.overrideSettings && config.download) || config.events === \"fileDownloaded\"",
      "type": "text",
      "options": {
        "allowContextSelector": "true"
      }
    },
    {
      "label": "Full Response",
      "name": "fullResponse",
      "type": "boolean",
      "description": "Include extended information about response",
      "visibility": "config.overrideSettings",
      "defaultValue": false,
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Connection timeout",
      "name": "connectionTimeout",
      "description": "Connect timeout interval, in milliseconds (0 = infinity). Default value: 5000 ms (5 sec)",
      "visibility": "config.overrideSettings",
      "type": "text",
      "defaultValue": "5000",
      "typeOptions": {
        "validation": {
          "function": "!config.connectionTimeout || utils.isPlaceholder(config.connectionTimeout) || utils.getInteger(config.connectionTimeout) >= 0",
          "message": "The time must be a valid placeholder or a positive integer greater than or equal to 0. "
        }
      },
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Read timeout",
      "name": "readTimeout",
      "description": "Read timeout interval, in milliseconds (0 = infinity). Default value: 60000 ms (60 sec)",
      "visibility": "config.overrideSettings",
      "type": "text",
      "defaultValue": "60000",
      "typeOptions": {
        "validation": {
          "function": "!config.readTimeout || utils.isPlaceholder(config.readTimeout) || utils.getInteger(config.readTimeout) >= 0",
          "message": "The time must be a valid placeholder or a positive integer greater than or equal to 0. "
        }
      },
      "options": {
        "allowContextSelector": "false"
      }
    }
  ],
  "outputs": [
    {
      "label": "Response",
      "name": "response",
      "type": "object",
      "description": "The response to external URL"
    }
  ]
}